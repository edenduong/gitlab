{"version":3,"sources":["config.js","authorization.js","api.js","page/createIssue.js","IssueList.js","page/createMilestone.js","page/createRelease.js","App.js","serviceWorker.js","index.js"],"names":["ORGANIZATION","config","repository","value","label","repos","projectId","release_branch","issueList","lastestVersion","suggestRelease","hasFeatures","repoUrl","key","authorization","Headers","PRIVATE-TOKEN","store","get","Content-Type","api","getDataFromGoogleSheet","planId","fetch","getListMileStoneClosed","method","headers","HeaderAuthorization","getIssueList","createMilestone","dataCreate","body","JSON","stringify","updateIssueToMilestone","iid","milestone","milestone_id","createIssue","title","labels","description","getIssueFromMileStone","mileStoneTitle","closeMileStone","mileStoneId","state_event","release","tagName","branch","version","releaseNote","milestones","tag_name","ref","name","closeIssue","issueIid","getListMileStone","checkLoginToken","authorizationKey","props","_this","Object","classCallCheck","this","_super","call","handleValueChange","setState","handleTabChange","tab","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","$","show","val","state","Config","map","index","message","length","is","push","Promise","resolve","reject","replace","then","response","ok","json","obj","web_url","includes","error","all","hide","notify","swal","fire","type","html","showCloseButton","text","stop","selectAll","e","preventDefault","each","checked","setBugTemplate","setFeatureTemplate","setDeveloperIssueTemplate","labelType","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","_this2","react","className","id","htmlFor","aria-label","onClick","js_default","onChange","onTabChange","generateMarkdownPreview","markdown","makeHtml","selectedTab","href","React","IssueList","createMileStone","self","assertThisInitialized","due_date","dueDate","dataMilestone","data","processArray","alert","_ref","item","trim","project_id","_x","_x2","_x3","apply","arguments","_ref2","_callee2","array","_iterator","_step","_context2","createForOfIteratorHelper","s","n","done","t0","f","finish","_x4","_x5","_x6","handleChange","event","target","handleChangeDue","dateDisplay","dueDateDisplay","date1","split","newDate","date","Date","setHours","setMinutes","setSeconds","toISOString","today","day","getDay","nextFriday","setDate","getDate","nextFridayDisplay","String","padStart","getMonth","getFullYear","lastestRelease","oldProps","newProps","hasFeature","reposLabel","getInitialState","mileStones","log","nextRelease","getList","releaseOrderRepos","sent","splice","repo","branchVersion","undefined","analyzeVersion","slice","indexOf","parseInt","join","readSprint","indexOfFeature","releaseVersion","values","toLowerCase","IssueList_IssueList","reposId","App","mileStonesList","concat","toConsumableArray","generateReleaseNotes","selectedMileStones","children","featureList","developList","releaseBranch","newChangeLog","labelChildren","valueIssue","_callee3","result","_context3","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","attr","_ref3","releaseMileStone","closeIssueList","res","_links","_ref4","_callee4","_context4","_ref5","_callee5","_context5","err","milestoneid","login","loading","token","set","logout","remove","react_router_dom","to","react_router","exact","path","component","createRelease","placeholder","rootElement","document","getElementById","ReactDOM","render","App_App","Boolean","window","location","hostname","match","react_default","createElement","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aac21b99.chunk.js","sourcesContent":["let ORGANIZATION = '';\r\nlet key = '';\r\nif (process.env.NODE_ENV !== 'production') {\r\n    ORGANIZATION = process.env.REACT_APP_REPOS_URL;\r\n    key = process.env.REACT_APP_API_KEY;\r\n} else {\r\n    ORGANIZATION = 'magestore-product';\r\n    key = 'AIzaSyDwlPbk6GDEb52P9eLxOBGugc_EcDo0DW0';\r\n}\r\nexport default {\r\n    'repository': [\r\n        {\r\n            'value': 'pos-standard-3',\r\n            'label': 'POS Standard 3',\r\n            'repos': ORGANIZATION + '/pos-standard',\r\n            'projectId': 18096926,\r\n            'release_branch': '3',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-standard-4',\r\n            'label': 'POS Standard 4',\r\n            'repos': ORGANIZATION + '/pos-standard',\r\n            'projectId': 18096926,\r\n            'release_branch': '4',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-pro-3',\r\n            'label': 'POS Pro 3',\r\n            'repos': ORGANIZATION + '/pos-pro',\r\n            'projectId': 18096980,\r\n            'release_branch': '3',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-pro-4',\r\n            'label': 'POS Pro 4',\r\n            'repos': ORGANIZATION + '/pos-pro',\r\n            'projectId': 18096980,\r\n            'release_branch': '4',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-enterprise-3',\r\n            'label': 'POS Enterprise 3',\r\n            'repos': ORGANIZATION + '/pos-enterprise',\r\n            'projectId': 18096977,\r\n            'release_branch': '3',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-enterprise-4',\r\n            'label': 'POS Enterprise 4',\r\n            'repos': ORGANIZATION + '/pos-enterprise',\r\n            'projectId': 18096977,\r\n            'release_branch': '4',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-pro-commerce-4',\r\n            'label': 'POS Pro Commerce 4',\r\n            'repos': ORGANIZATION + '/pos-pro-commerce',\r\n            'projectId': 18096981,\r\n            'release_branch': '4',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        },\r\n        {\r\n            'value': 'pos-enterprise-commerce-4',\r\n            'label': 'POS Enterprise Commerce 4',\r\n            'repos': ORGANIZATION + '/pos-enterprise-commerce',\r\n            'projectId': 18096978,\r\n            'release_branch': '4',\r\n            'issueList': [],\r\n            'lastestVersion': '',\r\n            'suggestRelease': '',\r\n            'hasFeatures': 0\r\n        }\r\n    ],\r\n\r\n    'repoUrl': [\r\n        {\r\n            'value': 'pos-standard',\r\n            'label': 'POS Standard',\r\n            'repos': ORGANIZATION + '/pos-standard',\r\n            'projectId': 18096926,\r\n        },\r\n        {\r\n            'value': 'pos-pro',\r\n            'label': 'POS Pro',\r\n            'repos': ORGANIZATION + '/pos-pro',\r\n            'projectId': 18096980,\r\n        },\r\n        {\r\n            'value': 'pos-enterprise',\r\n            'label': 'POS Enterprise',\r\n            'repos': ORGANIZATION + '/pos-enterprise',\r\n            'projectId': 18096977,\r\n        },\r\n        {\r\n            'value': 'pos-pro-commerce',\r\n            'label': 'POS Pro Commerce',\r\n            'repos': ORGANIZATION + '/pos-pro-commerce',\r\n            'projectId': 18096981,\r\n        },\r\n        {\r\n            'value': 'pos-enterprise-commerce',\r\n            'label': 'POS Enterprise Commerce',\r\n            'repos': ORGANIZATION + '/pos-enterprise-commerce',\r\n            'projectId': 18096978,\r\n        }\r\n    ],\r\n\r\n    'key': key\r\n}\r\n","import store from \"store\";\r\n\r\nexport default {\r\n    getHeader() {\r\n        return new Headers({\r\n            'PRIVATE-TOKEN': store.get('token'),\r\n            'Content-Type': 'application/json'\r\n        });\r\n    }\r\n}\r\n","import HeaderAuthorization from \"./authorization\";\r\nexport default {\r\n\r\n    getDataFromGoogleSheet(planId, key) {\r\n        return fetch('https://sheets.googleapis.com/v4/spreadsheets/' + planId + '/values/Plan!A1:C500?key=' + key,\r\n            {})\r\n    },\r\n\r\n    getListMileStoneClosed(value) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + value.projectId + '/milestones?direction=desc&state=closed&page=0&per_page=2000', {\r\n            method: 'get',\r\n            headers: HeaderAuthorization.getHeader()\r\n        })\r\n    },\r\n\r\n    getIssueList(projectId) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/issues?page=0&per_page=2000&state=opened', {\r\n            method: 'get',\r\n            headers: HeaderAuthorization.getHeader()\r\n        });\r\n    },\r\n\r\n    createMilestone(projectId, dataCreate) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/milestones', {\r\n            method: 'post',\r\n            headers: HeaderAuthorization.getHeader(),\r\n            body: JSON.stringify(dataCreate)\r\n        });\r\n    },\r\n\r\n    updateIssueToMilestone(iid, projectId, milestone) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/issues/' + iid, {\r\n            method: 'PUT',\r\n            headers: HeaderAuthorization.getHeader(),\r\n            body: JSON.stringify({\r\n                \"milestone_id\": milestone\r\n            })\r\n        })\r\n    },\r\n\r\n    createIssue(projectId, title, labels, body) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/issues', {\r\n            method: 'post',\r\n            headers: HeaderAuthorization.getHeader(),\r\n            body: JSON.stringify({\r\n                // eslint-disable-next-line no-useless-concat\r\n                title: title,\r\n                labels: labels,\r\n                // eslint-disable-next-line no-useless-concat\r\n                description: body\r\n            })\r\n        })\r\n    },\r\n\r\n    getIssueFromMileStone(projectId, mileStoneTitle) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/issues?page=0&per_page=2000&milestone=' + mileStoneTitle, {\r\n            method: 'get',\r\n            headers: HeaderAuthorization.getHeader()\r\n        })\r\n    },\r\n\r\n    closeMileStone(projectId, mileStoneId) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/milestones/' + mileStoneId, {\r\n            method: 'PUT',\r\n            headers: HeaderAuthorization.getHeader(),\r\n            body: JSON.stringify({\r\n                \"state_event\": \"close\"\r\n            })\r\n        });\r\n    },\r\n\r\n    release(projectId, tagName, branch, version, releaseNote, milestones) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/releases', {\r\n            method: 'POST',\r\n            headers: HeaderAuthorization.getHeader(),\r\n            body: JSON.stringify({\r\n                \"tag_name\": tagName,\r\n                \"ref\": branch,\r\n                \"name\": version,\r\n                // eslint-disable-next-line no-useless-concat\r\n                \"description\": releaseNote,\r\n                \"milestones\": milestones\r\n            })\r\n        })\r\n    },\r\n\r\n    closeIssue(projectId, issueIid) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/issues/' + issueIid, {\r\n            method: 'PUT',\r\n            headers: HeaderAuthorization.getHeader(),\r\n            body: JSON.stringify({\r\n                \"state_event\": \"close\"\r\n            })\r\n        })\r\n    },\r\n\r\n    getListMileStone(projectId) {\r\n        return fetch('https://gitlab.com/api/v4/projects/' + projectId + '/milestones?page=0&per_page=2000&state=active', {\r\n            method: 'get',\r\n            headers: HeaderAuthorization.getHeader()\r\n        })\r\n    },\r\n\r\n    checkLoginToken(authorizationKey) {\r\n        // Fetch to product team\r\n        return fetch('https://gitlab.com/api/v4/groups/7663926', {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'PRIVATE-TOKEN': authorizationKey\r\n            })\r\n        })\r\n    }\r\n}","import * as React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport $ from 'jquery';\r\nimport store from 'store';\r\nimport Config from \"../config\";\r\nimport swal from 'sweetalert2';\r\nimport api from \"../api\";\r\n\r\nexport default class createIssue extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            value: \"### Preconditions (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\" +\r\n                \"### Steps to reproduce (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\" +\r\n                \"### Expected result (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\" +\r\n                \"### Actual result (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\",\r\n            tab: \"write\",\r\n            labelType: ['Type: Bug report', 'Type: Feature request', 'Type: Developer issue']\r\n        };\r\n        this.converter = new Showdown.Converter({\r\n            tables: true,\r\n            simplifiedAutoLink: true,\r\n            strikethrough: true,\r\n            tasklists: true\r\n        });\r\n        this.repository = Config.repository;\r\n    }\r\n\r\n    handleValueChange = value => {\r\n        this.setState({value});\r\n    };\r\n\r\n    handleTabChange = tab => {\r\n        this.setState({tab});\r\n    };\r\n\r\n    createIssue = async () => {\r\n        $('.loading').show();\r\n        if ($('#title').val() && this.state.value) {\r\n            let call = [];\r\n            let repos = Config.repoUrl;\r\n            repos.map(\r\n                (value, index) => {\r\n                    value.message = '';\r\n                    return value;\r\n                }\r\n            );\r\n            this.repository.map((value) => {\r\n                if ($('#' + value.value).length > 0 && $('#' + value.value).is(':checked')) {\r\n                    call.push(\r\n                        new Promise((resolve, reject) => {\r\n                            api.createIssue(\r\n                                value.projectId,\r\n                                // eslint-disable-next-line \r\n                                '[' + value.release_branch + ']' + ' ' + $('#title').val(),\r\n                                [$('#label_type').val()],\r\n                                // eslint-disable-next-line\r\n                                this.state.value.replace('### Preconditions (*)', '### Preconditions (*)' + '\\n' + value.label + '\\n')\r\n                            ).then(response => {\r\n                                if (response.ok) {\r\n                                    response.json().then(obj => {\r\n                                        repos.map(\r\n                                            (value, index) => {\r\n                                                if (obj.web_url.includes(value.value + '/')) {\r\n                                                    // eslint-disable-next-line no-useless-concat\r\n                                                    repos[index].message = repos[index].message + \"<a href='\" + obj.web_url + \"'>\" + obj.title + '</a>' + '<br/>';\r\n                                                }\r\n                                                return value;\r\n                                            }\r\n                                        );\r\n                                        resolve(obj);\r\n                                    }, error => {\r\n                                        reject(error.message);\r\n                                    });\r\n                                } else {\r\n                                    reject('error');\r\n                                }\r\n                            }, error => {\r\n                                reject(error.message);\r\n                            });\r\n                        }));\r\n                }\r\n                return value;\r\n            });\r\n            await Promise.all(call).then(function (response) {\r\n                response.map(\r\n                    (value) => {\r\n                        return value;\r\n                    }\r\n                );\r\n                $('.loading').hide();\r\n                let notify = '';\r\n                repos.map(\r\n                    (value, index) => {\r\n                        if (value.message) {\r\n                            // eslint-disable-next-line no-useless-concat\r\n                            notify = notify + '<b>' + value.label + '</b> : <a href=\"' + 'https://gitlab.com/' + value.repos + '/issues' + '\">' + 'View All Issues' + '</a>' + '<br/>' + value.message;\r\n                        }\r\n                        return value;\r\n                    }\r\n                );\r\n                swal.fire({\r\n                    title: '<strong>Success!</strong>',\r\n                    type: 'success',\r\n                    html: notify,\r\n                    showCloseButton: true\r\n                })\r\n            });\r\n        } else {\r\n            swal.fire({\r\n                type: 'error',\r\n                title: 'Oops...',\r\n                text: 'Please fill all information!'\r\n            });\r\n            $('.loading').hide();\r\n        }\r\n    };\r\n\r\n\r\n    selectAll = (e) => {\r\n        e.preventDefault();\r\n        $(':checkbox').each(function () {\r\n            this.checked = true;\r\n        });\r\n    };\r\n\r\n    setBugTemplate = () => {\r\n        this.setState({\r\n            value: \"### Preconditions (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\" +\r\n                \"### Steps to reproduce (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\" +\r\n                \"### Expected result (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\" +\r\n                \"### Actual result (*)\\n\" +\r\n                \"1. \\n\" +\r\n                \"2. \\n\" +\r\n                \"\\n\",\r\n            tab: \"write\"\r\n        });\r\n        $('#label_type').val('Type: Bug report');\r\n    };\r\n\r\n    setFeatureTemplate = () => {\r\n        this.setState({\r\n            value: \"### Description (*)\\n\" +\r\n                \"\\n\" +\r\n                \"### Expected behavior (*)\\n\" +\r\n                \"\\n\" +\r\n                \"### Benefits\\n\" +\r\n                \"\\n\" +\r\n                \"### Additional information\\n\" +\r\n                \"\\n\",\r\n            tab: \"write\"\r\n        });\r\n        $('#label_type').val('Type: Feature request');\r\n    };\r\n\r\n    setDeveloperIssueTemplate = () => {\r\n        this.setState({\r\n            value: \"### Summary (*)\\n\" +\r\n                \"\\n\" +\r\n                \"### Examples (*)\\n\" +\r\n                \"\\n\" +\r\n                \"### Proposed solution\\n\" +\r\n                \"\\n\",\r\n            tab: \"write\"\r\n        });\r\n        $('#label_type').val('Type: Developer issue');\r\n    };\r\n\r\n    render() {\r\n        if (store.get('authorize-github-base64') || store.get('token') ) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"container\">\r\n                        <div className=\"form-group\" id={'title_group'}>\r\n                            <label htmlFor=\"title\" className={'font-weight-bold'}>Title Issue</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\"/>\r\n                        </div>\r\n                        <div className={'font-weight-bold'}>Content</div>\r\n                        <div id={'template_button'} aria-label=\"Basic example\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.setBugTemplate}>Bug\r\n                                Template\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.setFeatureTemplate}>Feature\r\n                                Template\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn btn-primary\"\r\n                                    onClick={this.setDeveloperIssueTemplate}>Develop Issue Template\r\n                            </button>\r\n                        </div>\r\n                        <br/>\r\n                        <div id={'container-body'}>\r\n                            <ReactMde\r\n                                onChange={this.handleValueChange}\r\n                                onTabChange={this.handleTabChange}\r\n                                value={this.state.value}\r\n                                generateMarkdownPreview={markdown =>\r\n                                    Promise.resolve(this.converter.makeHtml(markdown))\r\n                                }\r\n                                selectedTab={this.state.tab}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"label_type\" className={'font-weight-bold'}>Issue Type</label>\r\n                            <select className=\"form-control\" name={'label_type'} id={'label_type'}>\r\n                                {this.state.labelType.map((value, index) => {\r\n                                    return <option key={index} value={value}>{value}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <a onClick={this.selectAll} href={'/'}>Select All</a>\r\n                        <div id={'repos-list'}>\r\n                            {this.repository.map((value, index) => {\r\n                                return (\r\n                                    <div key={'form-check' + index} className=\"form-check\">\r\n                                        <input className={'form-check-input'} type=\"checkbox\" id={value.value}\r\n                                               name={value.value} value={value.value}/>\r\n                                        <label className={'form-check-label'}\r\n                                               htmlFor={value.value}>{value.label}</label>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div id={'button-list'}>\r\n                            <button className=\"btn btn-primary\" id={'create_issue_button'}\r\n                                    onClick={this.createIssue}>Create Issue\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport $ from 'jquery';\r\nimport swal from \"sweetalert2\";\r\nimport api from \"./api\"\r\n\r\nexport default class IssueList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let today = new Date();\r\n        let day = today.getDay();\r\n        let nextFriday = new Date();\r\n        if (day <= 5) {\r\n            nextFriday.setDate(today.getDate() + (5 - day));\r\n        } else {\r\n            nextFriday.setDate(today.getDate() + 5 + (day - 5));\r\n        }\r\n        nextFriday.setHours(17);\r\n        nextFriday.setMinutes(0);\r\n        nextFriday.setSeconds(0);\r\n        let dd = String(nextFriday.getDate()).padStart(2, '0');\r\n        let mm = String(nextFriday.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = nextFriday.getFullYear();\r\n        let nextFridayDisplay = dd + '/' + mm + '/' + yyyy;\r\n        this.state = {\r\n            lastestRelease: this.props.lastestRelease,\r\n            dueDateDisplay: nextFridayDisplay,\r\n            dueDate: nextFriday.toISOString(),\r\n            suggestRelease: this.props.suggestRelease,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps) {\r\n        const newProps = this.props;\r\n        if (oldProps.lastestRelease !== newProps.lastestRelease) {\r\n            this.setState({\r\n                lastestRelease: this.props.lastestRelease,\r\n            })\r\n        }\r\n        if (oldProps.suggestRelease !== newProps.suggestRelease) {\r\n            this.setState({\r\n                suggestRelease: this.props.suggestRelease,\r\n            })\r\n        }\r\n\r\n        if (oldProps.dueDateDisplay !== newProps.dueDateDisplay) {\r\n            this.setState({\r\n                dueDateDisplay: this.props.dueDateDisplay,\r\n            })\r\n        }\r\n\r\n        if (oldProps.dueDate !== newProps.dueDate) {\r\n            this.setState({\r\n                dueDate: this.props.dueDate,\r\n            })\r\n        }\r\n    }\r\n\r\n    createMileStone = (issueList, version, projectId) => {\r\n        let self = this;\r\n        let dataCreate = {\r\n            due_date: this.state.dueDate,\r\n            title: version,\r\n            description: version\r\n        };\r\n        $('.loading').show();\r\n        api.createMilestone(projectId, dataCreate).then(function (response) {\r\n            if (response.ok) {\r\n                response.json().then(function (dataMilestone) {\r\n                    api.getIssueList(projectId).then(function (response) {\r\n                        if (response.ok) {\r\n                            response.json().then(function (data) {\r\n                                self.processArray(data, issueList, dataMilestone);\r\n                            });\r\n\r\n                        } else {\r\n                            alert('Error ! Please try again !');\r\n                        }\r\n                    });\r\n                });\r\n            } else {\r\n                alert('Error ! Please try again !');\r\n            }\r\n        });\r\n    };\r\n\r\n    updateIssueToMilestone = async (item, issueList, dataMilestone) => {\r\n        if (issueList.includes(item.title.replace(/\\s+/g, ' ').trim()) && item.web_url.includes('issue')) {\r\n            await api.updateIssueToMilestone(item.iid, item.project_id, dataMilestone.id);\r\n        }\r\n    };\r\n\r\n    processArray = async (array, issueList, dataMilestone) => {\r\n        let self = this;\r\n        for (const item of array) {\r\n            await self.updateIssueToMilestone(item, issueList, dataMilestone);\r\n        }\r\n        swal.fire({\r\n            title: '<strong>Success!</strong>',\r\n            type: 'success',\r\n            // eslint-disable-next-line no-useless-concat\r\n            html: '<b>' + dataMilestone.title + ': </b>'+ \"<a href='\" + dataMilestone.web_url + \"'>\" + dataMilestone.web_url + '</a>',\r\n            showCloseButton: true\r\n        });\r\n        $('.loading').hide();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            'suggestRelease': event.target.value\r\n        })\r\n    };\r\n\r\n    handleChangeDue = (event) => {\r\n        let dateDisplay = event.target.value;\r\n        this.setState({\r\n            'dueDateDisplay': dateDisplay\r\n        });\r\n        let date1 = dateDisplay.split('/')\r\n        let newDate = date1[1] + '/' + date1[0] + '/' + date1[2];\r\n\r\n        let date = new Date(newDate);\r\n\r\n        date.setHours(17);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n\r\n        this.setState({\r\n            'dueDate': date.toISOString()\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let hasFeature = '';\r\n        if (this.props.hasFeatures) {\r\n            hasFeature = ' - Has Features';\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div className=\"container issue-repos\">\r\n                        <label className={'row font-weight-bold'}>{this.props.reposLabel}</label>\r\n                        <label className={'row'}>{'Lastest Released: ' + this.props.lastestRelease}</label>\r\n                        <div className=\"row\">\r\n                            <label>{'Suggest Released'}</label>{hasFeature}\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.suggestRelease}\r\n                                   onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>{'Deadline'}</label>{hasFeature}\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.dueDateDisplay}\r\n                                   onChange={this.handleChangeDue}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.props.issueList.map(\r\n                        (value, index) => {\r\n                            return <p key={index}>{value}</p>\r\n                        }\r\n                    )}\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\"\r\n                                onClick={() => this.createMileStone(this.props.issueList, this.state.suggestRelease, this.props.projectId)}>Create\r\n                            Milestone\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import * as React from \"react\";\r\nimport IssueList from \"../IssueList\";\r\nimport store from \"store\";\r\nimport $ from \"jquery\";\r\nimport Config from \"../config\";\r\nimport swal from 'sweetalert2';\r\nimport api from \"../api\";\r\n\r\nexport default class createMilestone extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitialState();\r\n    }\r\n\r\n    getInitialState = () => {\r\n        this.repository = Config.repository;\r\n        this.repoUrl = Config.repoUrl;\r\n        return {\r\n            mileStones: [],\r\n            value: '',\r\n            tab: \"write\",\r\n            log: '',\r\n            nextRelease: []\r\n        };\r\n    };\r\n\r\n    getList = async (releaseOrderRepos) => {\r\n        let call = [];\r\n        let self = this;\r\n        let result;\r\n        this.repoUrl.map((value) => {\r\n            call.push(api.getListMileStoneClosed(value));\r\n            return value;\r\n        });\r\n        result = await Promise.all(call);\r\n        result.map((value, index) => {\r\n            if (value.ok) {\r\n                // Examine the text in the response\r\n                value.json().then(function (data) {\r\n                    data = data.splice(0, 3);\r\n                    data.map(\r\n                        (value) => {\r\n                            self.repository.map(\r\n                                (repo, index) => {\r\n                                    if (value.web_url.includes(repo.repos + '/') && value.title.includes('v' + repo.release_branch) && !releaseOrderRepos[index].lastestVersion) {\r\n                                        releaseOrderRepos[index].lastestVersion = value.title;\r\n                                        releaseOrderRepos[index].suggestRelease = self.suggestRelease(value.title, 'v' + repo.release_branch, repo.hasFeatures);\r\n                                    }\r\n                                    return value;\r\n                                }\r\n                            );\r\n                            return value;\r\n                        }\r\n                    );\r\n                    self.setState({\r\n                        nextRelease: releaseOrderRepos\r\n                    });\r\n                    $('.loading').hide();\r\n                });\r\n            } else {\r\n                swal.fire({\r\n                    type: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!'\r\n                });\r\n                $('.loading').hide();\r\n            }\r\n            return value;\r\n        });\r\n    };\r\n\r\n    suggestRelease = (lastestRelease, branchVersion, hasFeature = false) => {\r\n        let version = lastestRelease.slice(lastestRelease.indexOf(branchVersion), lastestRelease.length);\r\n        let analyzeVersion = version.split('.');\r\n\r\n        if (!hasFeature) {\r\n            analyzeVersion[2] = parseInt(analyzeVersion[2]) + 1;\r\n        } else {\r\n            analyzeVersion[1] = parseInt(analyzeVersion[1]) + 1;\r\n            analyzeVersion[2] = 0;\r\n        }\r\n\r\n        return lastestRelease.slice(0, lastestRelease.indexOf(branchVersion)) + analyzeVersion.join('.');\r\n    };\r\n\r\n\r\n    readSprint = async () => {\r\n        this.setState(this.getInitialState());\r\n        let planId = $('#plan_id').val();\r\n        planId = planId.slice(planId.indexOf('d/'), planId.length);\r\n        let key = Config.key;\r\n        planId = planId.replace('d/', '');\r\n        if (planId.indexOf('/') > -1) {\r\n            planId = planId.slice(0, planId.indexOf('/'));\r\n        }\r\n        let self = this;\r\n        $('.loading').show();\r\n        if (store.get('authorize-github-base64') || store.get('token')) {\r\n            let releaseOrderRepos = this.repository;\r\n            releaseOrderRepos.map(\r\n                (value, index) => {\r\n                    value.issueList = [];\r\n                    return value;\r\n                }\r\n            );\r\n            try {\r\n                let response = await api.getDataFromGoogleSheet(planId, key);\r\n                let indexOfFeature = null;\r\n                if (response.ok) {\r\n                    response.json().then(function (data) {\r\n                        let releaseVersion = 0;\r\n                        data.values.map(\r\n                            (value, index) => {\r\n                                if (releaseVersion < Config.repository.length) {\r\n                                    if (typeof value[2] !== 'undefined' && value[2].toLowerCase() !== 'release') {\r\n                                        releaseOrderRepos[releaseVersion].issueList.push(\r\n                                            value[2].replace(/\\s+/g, ' ').trim()\r\n                                        );\r\n                                    }\r\n                                    if (typeof value[1] !== 'undefined' && value[1].toLowerCase().includes('feature')) {\r\n                                        if (!indexOfFeature) {\r\n                                            indexOfFeature = index;\r\n                                        }\r\n                                    }\r\n                                    /* Next Row After Release Line*/\r\n                                    if (index === (indexOfFeature + 1) && value[2]) {\r\n                                        releaseOrderRepos[releaseVersion].hasFeatures = 1;\r\n                                        indexOfFeature = null;\r\n                                    }\r\n                                    if (typeof value[2] !== 'undefined' && value[2].toLowerCase() === 'release') {\r\n                                        releaseVersion++;\r\n                                    }\r\n                                }\r\n                                return value;\r\n                            }\r\n                        );\r\n                        self.getList(releaseOrderRepos);\r\n                    });\r\n                } else {\r\n                    swal.fire({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Something went wrong!'\r\n                    });\r\n                    $('.loading').hide();\r\n                }\r\n            } catch(err) {\r\n                alert(err); // TypeError: failed to fetch\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={'container'}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"plan_id\" className={'font-weight-bold'}>Url của file Planning (Cần để public để\r\n                            có thể đọc))</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"plan_id\" name=\"plan_id\"/>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.readSprint}>Read Sprint Planning</button>\r\n                    <div className=\"form-group\" id={'list-issue'}>\r\n                        {this.state.nextRelease.map(\r\n                            (value, index) => {\r\n                                return <IssueList key={index} issueList={value.issueList} reposLabel={value.label}\r\n                                                  suggestRelease={value.suggestRelease}\r\n                                                  lastestRelease={value.lastestVersion}\r\n                                                  hasFeatures={value.hasFeatures}\r\n                                                  reposId={value.value}\r\n                                                  projectId={value.projectId}/>;\r\n                            }\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import * as React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport $ from 'jquery';\r\nimport store from 'store';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Config from '../config';\r\nimport swal from 'sweetalert2';\r\nimport api from \"../api\";\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mileStones: [],\r\n            value: '',\r\n            tab: \"write\",\r\n            log: ''\r\n        };\r\n\r\n        this.repository = Config.repository;\r\n        this.repoUrl = Config.repoUrl;\r\n\r\n        this.converter = new Showdown.Converter({\r\n            tables: true,\r\n            simplifiedAutoLink: true,\r\n            strikethrough: true,\r\n            tasklists: true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (store.get('authorize-github-base64') || store.get('token')) {\r\n            try {\r\n                this.getList();\r\n            } catch(err) {\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    getList = async () => {\r\n        let call = [];\r\n        let self = this;\r\n        $('.loading').show();\r\n        let mileStonesList = [];\r\n        this.repoUrl.map((value) => {\r\n            call.push(\r\n                new Promise((resolve, reject) => {\r\n                    api.getListMileStone(value.projectId).then(response => {\r\n                        if (response.ok) {\r\n                            response.json().then(obj => {\r\n                                mileStonesList = [...mileStonesList, ...obj];\r\n                                resolve(obj);\r\n                            }, error => {\r\n                                reject(error.message);\r\n                            });\r\n                        } else {\r\n                            reject('error');\r\n                        }\r\n                    }, error => {\r\n                        reject(error.message);\r\n                    });\r\n                })\r\n            );\r\n            return value;\r\n        });\r\n        await Promise.all(call).then(function () {\r\n            self.setState({\r\n                mileStones: mileStonesList\r\n            });\r\n            $('.loading').hide();\r\n        })\r\n    };\r\n\r\n\r\n    handleValueChange = value => {\r\n        this.setState({value});\r\n    };\r\n\r\n    handleTabChange = tab => {\r\n        this.setState({tab});\r\n    };\r\n\r\n    generateReleaseNotes = () => {\r\n        this.setState({\r\n            value: ''\r\n        });\r\n\r\n        let selectedMileStones = $('#mile_stones').children(\"option:selected\").val();\r\n        let mileStoneTitle = $('#mile_stones').children(\"option:selected\").html();\r\n\r\n\r\n        let projectId = '';\r\n        let issueList = [];\r\n        let featureList = [];\r\n        let developList = [];\r\n        let self = this;\r\n        let releaseBranch = '';\r\n\r\n        this.repository.map((value, index) => {\r\n            if (selectedMileStones.includes(value.repos) && mileStoneTitle.includes('v' + value.release_branch)) {\r\n                projectId = value.projectId;\r\n                releaseBranch = value.release_branch;\r\n            }\r\n            return value;\r\n        });\r\n        let version = $('#mile_stones').children(\"option:selected\").html();\r\n        version = version.slice(version.indexOf(\"v\" + releaseBranch), version.length);\r\n        $('.loading').show();\r\n        api.getIssueFromMileStone(projectId, mileStoneTitle).then(function (response) {\r\n            if (response.ok) {\r\n                let newChangeLog = self.state.value;\r\n                // eslint-disable-next-line no-useless-concat\r\n                newChangeLog = newChangeLog + version + '\\n' + '=============' + '\\n';\r\n\r\n                // Examine the text in the response\r\n                response.json().then(function (data) {\r\n                    data.map((value, index) => {\r\n                        let title = value.title;\r\n\r\n                        let label = value.labels;\r\n                        let type = 'bug';\r\n                        label.map((labelChildren, index) => {\r\n                            if (labelChildren.toLowerCase().includes('feature')) {\r\n                                type = 'feature';\r\n                            }\r\n                            if (labelChildren.toLowerCase().includes('develop')) {\r\n                                type = 'develop';\r\n                            }\r\n                            return labelChildren;\r\n                        });\r\n                        if (type === 'feature') {\r\n                            featureList.push('[#' + value.iid + '](' + value.web_url + '): ' + title);\r\n                        } else if (type === 'develop') {\r\n                            developList.push('[#' + value.iid + '](' + value.web_url + '): ' + title);\r\n                        } else {\r\n                            issueList.push('[#' + value.iid + '](' + value.web_url + '): ' + title);\r\n                        }\r\n\r\n                        return value;\r\n                    });\r\n\r\n\r\n                    if (featureList.length) {\r\n                        // eslint-disable-next-line no-useless-concat\r\n                        newChangeLog = newChangeLog + '\\n' + '#### Feature Updated' + '\\n';\r\n\r\n                        featureList.map((valueIssue, index) => {\r\n                            index++;\r\n                            newChangeLog = newChangeLog + index + '. ' + valueIssue + '\\n';\r\n                            return valueIssue;\r\n                        });\r\n                    }\r\n\r\n\r\n                    if (issueList.length) {\r\n                        // eslint-disable-next-line no-useless-concat\r\n                        newChangeLog = newChangeLog + '\\n' + '#### Bug Fixed' + '\\n';\r\n\r\n                        issueList.map((valueIssue, index) => {\r\n                            index++;\r\n                            newChangeLog = newChangeLog + index + '. ' + valueIssue + '\\n';\r\n                            return valueIssue;\r\n                        });\r\n                    }\r\n\r\n                    if (developList.length) {\r\n                        // eslint-disable-next-line no-useless-concat\r\n                        newChangeLog = newChangeLog + '\\n' + '#### Developer Issue' + '\\n';\r\n\r\n                        developList.map((valueIssue, index) => {\r\n                            index++;\r\n                            newChangeLog = newChangeLog + index + '. ' + valueIssue + '\\n';\r\n                            return valueIssue;\r\n                        });\r\n                    }\r\n\r\n                    self.setState({\r\n                        value: newChangeLog\r\n                    });\r\n                    $('.loading').hide();\r\n\r\n                });\r\n            } else {\r\n                swal.fire({\r\n                    type: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!'\r\n                });\r\n                $('.loading').hide();\r\n            }\r\n        });\r\n    };\r\n\r\n    release = async () => {\r\n        let confirmFunction = await swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"Do you really want to release?\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Release!'\r\n        });\r\n\r\n        if (confirmFunction.value) {\r\n            $('.loading').show();\r\n            let selectedMileStones = $('#mile_stones').children(\"option:selected\").val();\r\n            let mileStoneTitle = $('#mile_stones').children(\"option:selected\").html();\r\n            let mileStoneId = $('#mile_stones').children(\"option:selected\").attr('milestoneId');\r\n            let version = $('#mile_stones').children(\"option:selected\").html();\r\n\r\n            let projectId = '';\r\n            let self = this;\r\n            let branch = '';\r\n            let tagName = '';\r\n            this.repository.map((value, index) => {\r\n                if (selectedMileStones.includes(value.repos) && version.includes('v' + value.release_branch)) {\r\n                    projectId = value.projectId;\r\n                    branch = value.release_branch;\r\n                    tagName = $('#mile_stones').children(\"option:selected\").html();\r\n                }\r\n                return value;\r\n            });\r\n\r\n            let result = await api.getIssueFromMileStone(projectId, mileStoneTitle);\r\n\r\n            if (result.ok) {\r\n                result.json().then(async function (data) {\r\n                    await self.closeIssueList(data);\r\n\r\n                    let closeMileStone = api.closeMileStone(projectId, mileStoneId);\r\n\r\n                    tagName = tagName.slice(tagName.indexOf(\"v\" + branch), tagName.length);\r\n                    // eslint-disable-next-line\r\n                    let releaseMileStone = api.release(projectId, tagName, branch, version, self.state.value.replace(tagName + '\\n' + '=============' + '\\n\\n', ''), [mileStoneTitle]);\r\n\r\n                    Promise.all([closeMileStone, releaseMileStone])\r\n                        .then(function(res){\r\n                            let response = res[1];\r\n                            if (response.ok) {\r\n                                // Examine the text in the response\r\n                                response.json().then(function (data) {\r\n                                    swal.fire({\r\n                                        title: '<strong>Released!</strong>',\r\n                                        type: 'success',\r\n                                        // eslint-disable-next-line no-useless-concat\r\n                                        html: '<b>Release ' + data.name + ': </b>' + \"<a href='\" + data._links.self + \"'>\" + data._links.self + '</a>',\r\n                                        showCloseButton: true\r\n                                    });\r\n                                    $('.loading').hide();\r\n                                });\r\n                            } else {\r\n                                swal.fire({\r\n                                    type: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: 'Something went wrong!'\r\n                                });\r\n                                $('.loading').hide();\r\n                            }\r\n                        });\r\n                });\r\n            } else {\r\n                swal.fire({\r\n                    type: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!'\r\n                });\r\n                $('.loading').hide();\r\n            }\r\n        }\r\n    };\r\n\r\n    closeIssueList = async (data) => {\r\n        let self = this;\r\n        for (const value of data) {\r\n            await self.closeIssue(value);\r\n        }\r\n    };\r\n\r\n    closeIssue = async (value) => {\r\n        await api.closeIssue(value.project_id, value.iid);\r\n    };\r\n\r\n    render() {\r\n        if (store.get('authorize-github-base64') || store.get('token')) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"container\" id={'select_mile_stones'}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"mile_stones\" className={'font-weight-bold'}>Milestones</label>\r\n                            <select className=\"form-control\" name={'mile_stones'} id={'mile_stones'}\r\n                                    onChange={this.generateReleaseNotes}>\r\n                                <option value={'0'}>--- Please Select MileStones ---</option>\r\n                                {this.state.mileStones.map((value, index) => {\r\n                                    return <option key={value.id} milestoneid={value.id}\r\n                                                   value={value.web_url}>{value.title}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <ReactMde\r\n                            onChange={this.handleValueChange}\r\n                            onTabChange={this.handleTabChange}\r\n                            value={this.state.value}\r\n                            generateMarkdownPreview={markdown =>\r\n                                Promise.resolve(this.converter.makeHtml(markdown))\r\n                            }\r\n                            selectedTab={this.state.tab}\r\n                        />\r\n                    </div>\r\n                    <br/>\r\n                    <div className={'container'}>\r\n                        <p>Các bước để Release qua tool này:</p>\r\n                        <p>1. Chọn Milestone</p>\r\n                        <p>2. Sau khi chọn sẽ Generate ra ChangeLog. Copy vào trong CHANGELOG.md của nhánh develop. Nâng\r\n                            version trong config.xml. Commit và Push</p>\r\n                        <p>3. Merge nhánh <b>develop ( nhánh 3-develop, nhánh 4-develop) </b> vào trong nhánh <b>release\r\n                            (\r\n                            nhánh 3, nhánh 4)</b></p>\r\n                        <p>4. Bấm nút bên dưới hoàn tất quá trình</p>\r\n                        <button className=\"btn btn-primary\" onClick={this.release}>RELEASE</button>\r\n                        <br/>\r\n                        <br/>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport $ from 'jquery';\r\nimport store from 'store';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min';\r\nimport './App.css';\r\nimport {HashRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport createIssue from \"./page/createIssue\";\r\nimport createMilestone from \"./page/createMilestone\";\r\nimport createRelease from \"./page/createRelease\";\r\nimport swal from 'sweetalert2';\r\nimport api from './api';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (store.get('authorize-github-base64') || store.get('token')) {\r\n            this.state = {\r\n                login: true\r\n            };\r\n        } else {\r\n            this.state = {\r\n                login: false\r\n            };\r\n        }\r\n    }\r\n\r\n    login = async (e) => {\r\n        let self = this;\r\n        let loading = $('.loading');\r\n        let token = $('#token');\r\n        e.preventDefault();\r\n        if (token.val()) {\r\n            let authorizationKey = token.val();\r\n            loading.show();\r\n            try {\r\n                let response = await api.checkLoginToken(authorizationKey);\r\n                if (response.ok) {\r\n                    store.set('token', authorizationKey);\r\n                    self.setState({\r\n                        login: true\r\n                    })\r\n                } else {\r\n                    swal.fire({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Something went wrong!'\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                swal.fire({\r\n                    type: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!'\r\n                });\r\n            }\r\n            loading.hide();\r\n        } else {\r\n            swal.fire({\r\n                type: 'error',\r\n                title: 'Oops...',\r\n                text: 'Please re-fill information!'\r\n            });\r\n        }\r\n    };\r\n\r\n    logout = async (e) => {\r\n        e.preventDefault();\r\n        let self = this;\r\n        try {\r\n            let result = await swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"Do you really want to logout\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, Log out!'\r\n            });\r\n\r\n            if (result.value) {\r\n                store.remove('authorize-github-base64');\r\n                store.remove('token');\r\n                self.setState({\r\n                    login: false\r\n                })\r\n            }\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.login) {\r\n            return (\r\n                <Router>\r\n                    <div className=\"loading\">Loading&#8230;</div>\r\n                    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                            <div className=\"navbar-nav\">\r\n                                <Link className=\"nav-item nav-link\" to=\"/issue\">Create Issue</Link>\r\n                                <Link className=\"nav-item nav-link\" to=\"/milestone/\">Create Milestone</Link>\r\n                                <Link className=\"nav-item nav-link\" to=\"/release/\">Create Release</Link>\r\n                                <Link className=\"nav-item nav-link\" to='#' onClick={this.logout}>Logout</Link>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"container container-fluid\">\r\n                        <aside className=\"col-sm-12\">\r\n                            <Route exact path=\"/\" component={createIssue}/>\r\n                            <Route exact path=\"/issue\" component={createIssue}/>\r\n                            <Route exact path=\"/milestone/\" component={createMilestone}/>\r\n                            <Route exact path=\"/release/\" component={createRelease}/>\r\n                        </aside>\r\n                    </div>\r\n                </Router>\r\n            );\r\n        } else {\r\n            return (\r\n                <Router>\r\n                    <div className=\"loading\">Loading&#8230;</div>\r\n                    <div className=\"container container-fluid\">\r\n                        <aside className=\"col-sm-8\" id=\"form_wrapper\">\r\n                            <div className=\"card\">\r\n                                <article className=\"card-body\">\r\n                                    <h4 className=\"card-title text-center mb-4 mt-1\">Sign in</h4>\r\n                                    <hr/>\r\n                                    <form id=\"login_form\">\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"input-group\">\r\n                                                <input id=\"token\" name=\"token\" className=\"form-control\"\r\n                                                       placeholder=\"GitLab Token\"\r\n                                                       type=\"text\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-block\"\r\n                                                    onClick={this.login}> Login\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </article>\r\n                            </div>\r\n                        </aside>\r\n                    </div>\r\n                </Router>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App/>, rootElement);\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}